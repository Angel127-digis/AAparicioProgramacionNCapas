@model ML.Usuario

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="contenedorForm">

    @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "form" }))
    {
        <section class="FormUsuario">
            <h2>Usuario</h2>
            <hr />
            <article class="Flex_Columnas">
                <div class="ocultar">
                    @Html.HiddenFor(model => model.IdUsuario)
                    @Html.HiddenFor(model => model.Imagen)
                </div>
                <div>
                    @if (Model.Imagen != null)
                    {
                        <div class="contenedor--img">
                            <img id="img" class="img" src="data:image/*;base64, @Convert.ToBase64String(Model.Imagen)">
                        </div>
                    }
                    else
                    {
                        <div class="contenedor--img">
                            <img id="img" class="img" src="https://static.vecteezy.com/system/resources/previews/024/983/914/non_2x/simple-user-default-icon-free-png.png" alt="Img Usuario">
                        </div>
                    }
                    <input type="file" id="inputFileImagen" name="inputFileImagen" onchange="validarImagen(), visualizarImagen(this)" />
                </div>
                <div>
                    @Html.TextBoxFor(model => model.UserName, new { @class = "soloLetras borrarSpam" })
                    @Html.LabelFor(model => model.UserName)
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "soloLetras borrarSpam" })
                    @Html.LabelFor(model => model.Nombre)
                    @*<sapam class="error"></sapam>*@
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger error" })
                </div>

                <div>
                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "soloLetras borrarSpam" })
                    @Html.LabelFor(model => model.ApellidoPaterno)
                    @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "soloLetras borrarSpam" })
                    @Html.LabelFor(model => model.ApellidoMaterno)
                    @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    @Html.TextBoxFor(model => model.Email, new { @class = "validarEmail borrarSpam" })
                    @Html.LabelFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    @Html.TextBoxFor(model => model.Password, new { @class = "validarContrasenia borrarSpam", @id = "contraseniaUno" })
                    @Html.LabelFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    @Html.TextBoxFor(model => model.Password, new { @class = "validarContrasenia borrarSpam", @id = "contraseniaDos" })
                    <label>Confirmar contraseña</label>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    <input type="text" id="datepicker" name="FechaNacimiento" value="@Model.FechaNacimiento">
                    @Html.LabelFor(model => model.FechaNacimiento)
                    @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div class="cont_radio">
                    @*@Html.TextBoxFor(model => model.Sexo, new { @required = "required", @class = "soloLetras borrarSpam" })
        @Html.LabelFor(model => model.Sexo)*@
                    @*<sapam class="error"></sapam>*@
                    @if (Model.Sexo == "M")
                    {
                        <div class="input--radio">
                            <input type="radio" name="sexo" value="H">
                            <label for="sexo">H</label>
                        </div><div class="input--radio">
                            <input type="radio" name="sexo" value="M" checked>
                            <label for="sexo">M</label>
                        </div>
                    }
                    else
                    {
                        <div class="input--radio">
                            <input type="radio" name="sexo" value="H" checked>
                            <label for="sexo">H</label>
                        </div><div class="input--radio">
                            <input type="radio" name="sexo" value="M">
                            <label for="sexo">M</label>
                        </div>
                    }
                </div>

                <div>
                    @Html.TextBoxFor(model => model.Telefono, new { @class = "soloNumeros borrarSpam" })
                    @Html.LabelFor(model => model.Telefono)
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    @Html.TextBoxFor(model => model.Celular, new { @class = "soloNumeros borrarSpam bordeVerde" })
                    @Html.LabelFor(model => model.Celular)
                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>

                <div>
                    @Html.TextBoxFor(model => model.Estatus, new { @class = "borrarSpam bordeVerde" })
                    @Html.LabelFor(model => model.Estatus)
                </div>

                <div>
                    @Html.TextBoxFor(model => model.CURP, new { @for = "CURP", @id = "curp_input", @oninput = "validarInput(this)", @class = "borrarSpam" })
                    @Html.LabelFor(model => model.CURP, new { @name = "CURP" })
                    @Html.ValidationMessageFor(model => model.CURP, "", new { @class = "text-danger error" })
                    @*<sapam class="error"></sapam>*@
                </div>
                <div>
                    @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Rols, "IdRol", "Nombre"), "Seleccione una opcion", new { @class = "form-select" })
                </div>
            </article>
        </section>
        <section class="formDireccion">
            <h2>Direccion</h2>
            <hr />
            <article class="Flex_Columnas">

                <div>
                    @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "colorInput" })
                    @Html.LabelFor(model => model.Direccion.Calle)
                </div>
                <div>
                    @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "colorInput" })
                    @Html.LabelFor(model => model.Direccion.NumeroInterior)
                </div>
                <div>
                    @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "colorInput" })
                    @Html.LabelFor(model => model.Direccion.NumeroExterior)
                </div>

                <div>
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleccione un Estado", new { @onchange = "MunicipioGetByIdEstado()", @id = "ddlEstado", @class = "form-select" })
                </div>
                @if (Model.Direccion.Colonia.Municipio.Municipios != null)
                {
                    <div>
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleccione un Municipio", new { @onchange = "ColoniaGetByIdMunicipio()", @id = "ddlMunicipio", @class = "form-select" })
                    </div>
                }
                else
                {
                    <div>
                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(String.Empty), "Seleccione un Municipio", new { @onchange = "ColoniaGetByIdMunicipio()", @id = "ddlMunicipio", @class = "form-select" })
                    </div>
                }
                @if (Model.Direccion.Colonia.Colonias != null)
                {
                    <div>
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleccione una Colonia", new { @id = "ddlColonia", @class = "form-select" })
                    </div>
                }
                else
                {
                    <div>
                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(String.Empty), "Seleccione una Colonia", new { @id = "ddlColonia", @class = "form-select" })
                    </div>
                }


                <div>
                    <button href="@Url.Action("GetAll", "Usuario")" class="btn btn-primary">Enviar</button>
                </div>

            </article>
        </section>
    }
</section>

<style>
    @@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css");

    :root {
        --colorInput: #219ebc;
        --colorFocus: #8ea604;
    }

    .contenedorForm {
        width: 100%;
        margin: 0 auto;
    }

    form {
        border-radius: 20px;
        background-color: #48cae424;
        padding: 30px 0;
        width: 100%;
        text-align: center;
    }

    .Flex_Columnas {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
    }

        .Flex_Columnas div {
            position: relative;
            margin: 0 30px 20px;
            width: 28%;
            flex-grow: 3;
        }

    .form-select {
        margin: 0 auto;
    }

    .contenedor--img {
        width: 100px;
        height: 100px;
        position: initial;
        border: solid;
    }

    .img {
        width: 100%;
        height: 100%;
    }

    .inputImg {
        border: none;
        text-align: center;
    }

    .ocultar {
        overflow: hidden;
        display: none;
    }

    input {
        outline: none;
        border: .5px solid var(--colorInput);
        font-size: .8rem;
        padding: 5px;
        width: 100%;
        max-width: initial;
        border-radius: 5px;
    }

    .cont_radio {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .input--radio {
        display: flex;
        margin: auto !important;
        justify-content: center;
    }

    input[type="radio"] {
        width: inherit !important;
    }

        input[type="radio"] + label {
            position: initial;
            border: initial;
            padding: 3px;
        }



    label {
        position: absolute;
        left: 5px;
        top: -9px;
        font-size: .7em;
        background-color: #fff;
        border-left: .5px solid var(--colorInput);
        border-right: .5px solid var(--colorInput);
    }

    .bordeVerde {
        border-color: green;
    }
</style>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="~/Scripts/jquery-3.7.0.js"></script>
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<script src="https://code.jquery.com/ui/1.14.1/jquery-ui.js"></script>
<script>

    //let ddlMunicipio = $('#ddlEstado').val()
    var ddlURLMunicipio = "@Url.Action("GetByIdMunicipio", "Usuario")?idEstado=";
    var ddlURLColonia = "@Url.Action("GetByIdColonia", "Usuario")?IdMunicipio=";
</script>
<script src="~/Scripts/Usuario/UsuarioFormulario.js"></script>
